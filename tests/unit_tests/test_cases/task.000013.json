
{
    "task": {
        "uid"               : "task.000013",
        "description": {
            "executable"    : "/bin/sleep",
            "arguments"     : ["10"],
            "cpu_processes" : 1,
            "cpu_threads"   : 1,
            "gpu_processes" : 2,
            "environment"   : {}
        },
        "task_sandbox_path": "/tmp"
    },

    "setup": {
        "lm": {
            "slots": {
                "cores_per_node": 16,
                "gpus_per_node" : 1,
                "lfs_per_node"  : {"path": null, "size": 0},
                "lm_info"       : {},
                "ranks"         : [{"node"    : "node1",
                                    "node_id" : "node1",
                                    "core_map": [[0]],
                                    "gpu_map" : [[0], [1]],
                                    "lfs"     : {"path": null, "size": 0}
                }]
            }
        }
    },

    "results": {
        "lm": {
            "fork"  : {
                "rank_exec"  : "/bin/sleep \"10\""
            },
            "aprun" : ["aprun -n 1 -N 1 -L node1 -d 1 -cc 0 /bin/sleep \"10\"  ", null],
            "mpirun" : {
                "launch_cmd" : "mpirun  -np 1   -host node1",
                "rank_exec"  : "/bin/sleep \"10\""
            },
            "ibrun" : {
                "launch_cmd" : "ibrun -n 1 -o 0",
                "rank_exec"  : "/bin/sleep \"10\""
            },
            "ssh"   : {
                "launch_cmd" : "ssh node1",
                "rank_exec"  : "/bin/sleep \"10\""
            },
            "spark" : "RuntimeError",
            "yarn"  : "RuntimeError",
            "jsrun" : {
                "launch_cmd" : "jsrun --erf_input rs_layout_task_000013",
                "rank_exec"  : "/bin/sleep \"10\""
            }
        },
        "resource_file": {
            "jsrun" : ["cpu_index_using: physical\n","rank: 0: { host: node1; cpu: {0}; gpu: {0,1}}\n"]
        },
        "resource_filename": {
            "jsrun" : "rs_layout_task_000013"
        }
    }
}

